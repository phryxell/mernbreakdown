{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\phili\\\\breakdown-tracker\\\\mern-breakdown-tracker\\\\src\\\\components\\\\breakdowns-list.component.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nexport default class BreakdownsList extends Component {\n  constructor(props) {\n    super(props);\n    this.deleteBreakdown = this.deleteBreakdown.bind(this);\n    this.state = {\n      breakdown: []\n    };\n  }\n\n  componentDidMount() {\n    axios.get('http://localhost:5000/breakdowns/').then(response => {\n      this.setState({\n        breakdowns: response.data\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  deleteBreakdown(id) {\n    axios.delete('http://localhost:5000/breakdowns/' + id).then(response => {\n      console.log(response.data);\n    });\n    this.setState({\n      breakdowns: this.state.breakdowns.filter(el => el._id !== id) //Filter Array of breakdowns, for every element the page will return all objects except the one who is equal to the given id\n\n    });\n  }\n\n  breakdownList() {\n    return this.state.breakdowns.map(currentbreakdown => {\n      return /*#__PURE__*/React.createElement(Breakdown, {\n        breakdown: currentbreakdown,\n        deleteBreakdown: this.deleteBreakdown,\n        key: currentbreakdown._id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 14\n        }\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }, \"Logged Breakdowns\"), /*#__PURE__*/React.createElement(\"table\", {\n      className: \"table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      className: \"thead-light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 15\n      }\n    }, \"Username\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 15\n      }\n    }, \"Description\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 15\n      }\n    }, \"Breakdown time\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 15\n      }\n    }, \"Date\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 15\n      }\n    }, \"Actions\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }\n    }, this.breakdownList())));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/phili/breakdown-tracker/mern-breakdown-tracker/src/components/breakdowns-list.component.js"],"names":["React","Component","Link","axios","BreakdownsList","constructor","props","deleteBreakdown","bind","state","breakdown","componentDidMount","get","then","response","setState","breakdowns","data","catch","error","console","log","id","delete","filter","el","_id","breakdownList","map","currentbreakdown","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,eAAe,MAAMC,cAAN,SAA6BH,SAA7B,CAAuC;AACpDI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,eAAL,GAAuB,KAAKA,eAAL,CAAqBC,IAArB,CAA0B,IAA1B,CAAvB;AAEA,SAAKC,KAAL,GAAa;AAACC,MAAAA,SAAS,EAAE;AAAZ,KAAb;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClBR,IAAAA,KAAK,CAACS,GAAN,CAAU,mCAAV,EACGC,IADH,CACQC,QAAQ,IAAI;AAChB,WAAKC,QAAL,CAAc;AAAEC,QAAAA,UAAU,EAAEF,QAAQ,CAACG;AAAvB,OAAd;AACD,KAHH,EAIGC,KAJH,CAIUC,KAAD,IAAW;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,KANH;AAOD;;AAEDZ,EAAAA,eAAe,CAACe,EAAD,EAAK;AAClBnB,IAAAA,KAAK,CAACoB,MAAN,CAAa,sCAAoCD,EAAjD,EACGT,IADH,CACQC,QAAQ,IAAI;AAAEM,MAAAA,OAAO,CAACC,GAAR,CAAYP,QAAQ,CAACG,IAArB;AAA2B,KADjD;AAEA,SAAKF,QAAL,CAAc;AACZC,MAAAA,UAAU,EAAE,KAAKP,KAAL,CAAWO,UAAX,CAAsBQ,MAAtB,CAA6BC,EAAE,IAAIA,EAAE,CAACC,GAAH,KAAWJ,EAA9C,CADA,CACkD;;AADlD,KAAd;AAGD;;AAEDK,EAAAA,aAAa,GAAG;AACd,WAAO,KAAKlB,KAAL,CAAWO,UAAX,CAAsBY,GAAtB,CAA0BC,gBAAgB,IAAI;AACnD,0BAAO,oBAAC,SAAD;AAAW,QAAA,SAAS,EAAEA,gBAAtB;AAAwC,QAAA,eAAe,EAAE,KAAKtB,eAA9D;AAA+E,QAAA,GAAG,EAAEsB,gBAAgB,CAACH,GAArG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,KAFM,CAAP;AAGD;;AAEDI,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,eAEE;AAAO,MAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAO,MAAA,SAAS,EAAC,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBALF,CADF,CADF,eAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,KAAKH,aAAL,EADJ,CAVF,CAFF,CADF;AAmBD;;AArDmD","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nexport default class BreakdownsList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.deleteBreakdown = this.deleteBreakdown.bind(this)\r\n\r\n    this.state = {breakdown: []};\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios.get('http://localhost:5000/breakdowns/')\r\n      .then(response => {\r\n        this.setState({ breakdowns: response.data })\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      })\r\n  }\r\n\r\n  deleteBreakdown(id) {\r\n    axios.delete('http://localhost:5000/breakdowns/'+id)\r\n      .then(response => { console.log(response.data)});\r\n    this.setState({\r\n      breakdowns: this.state.breakdowns.filter(el => el._id !== id) //Filter Array of breakdowns, for every element the page will return all objects except the one who is equal to the given id\r\n    })\r\n  }\r\n\r\n  breakdownList() {\r\n    return this.state.breakdowns.map(currentbreakdown => {\r\n      return <Breakdown breakdown={currentbreakdown} deleteBreakdown={this.deleteBreakdown} key={currentbreakdown._id}/>;\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h3>Logged Breakdowns</h3>\r\n        <table className=\"table\">\r\n          <thead className=\"thead-light\">\r\n            <tr>\r\n              <th>Username</th>\r\n              <th>Description</th>\r\n              <th>Breakdown time</th>\r\n              <th>Date</th>\r\n              <th>Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            { this.breakdownList() }\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    )\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}